// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: children transform > children & sibling references 1`] = `
"import { child as _child, nextn as _nextn, next as _next, createTextNode as _createTextNode, insert as _insert, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div><p> </p> <!><p> </p></div>", true)

export function render(_ctx) {
  const n4 = t0()
  const n0 = _child(n4)
  const n3 = _nextn(n0, 2)
  const n2 = _next(n3)
  const x0 = _child(n0)
  const n1 = _createTextNode()
  const x2 = _child(n2)
  _insert(n1, n4, n3)
  _renderEffect(() => {
    _setText(x0, _toDisplayString(_ctx.first))
    _setText(n1, _toDisplayString(_ctx.second) + " " + _toDisplayString(_ctx.third) + " ")
    _setText(x2, _toDisplayString(_ctx.forth))
  })
  return n4
}"
`;

exports[`compiler: children transform > efficient find 1`] = `
"import { child as _child, children as _children, setText as _setText, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div><div>x</div><div>x</div><div>x</div><div>x</div><div>x</div><div></div></div>", true)

export function render(_ctx) {
  const n1 = t0()
  const n0 = _children(n1, 5)
  _renderEffect(() => _setText(n0, _ctx.msg))
  return n1
}"
`;

exports[`compiler: children transform > efficient traversal 1`] = `
"import { child as _child, next as _next, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div><div>x</div><div><span> </span></div><div><span> </span></div><div><span> </span></div></div>", true)

export function render(_ctx) {
  const n3 = t0()
  const p0 = _next(_child(n3))
  const n0 = _child(p0)
  const p1 = _next(p0)
  const n1 = _child(p1)
  const p2 = _next(p1)
  const n2 = _child(p2)
  const x0 = _child(n0)
  const x1 = _child(n1)
  const x2 = _child(n2)
  _renderEffect(() => {
    const _msg = _ctx.msg
    
    _setText(x0, _toDisplayString(_msg))
    _setText(x1, _toDisplayString(_msg))
    _setText(x2, _toDisplayString(_msg))
  })
  return n3
}"
`;
