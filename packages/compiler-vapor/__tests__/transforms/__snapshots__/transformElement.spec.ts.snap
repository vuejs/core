// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: element transform > component > cache v-on expression with unique handler name 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const _component_Bar = _resolveComponent("Bar")
  const _on_bar = $event => (_ctx.handleBar($event))
  const n0 = _createComponentWithFallback(_component_Foo, { onBar: () => _on_bar })
  const _on_bar1 = () => _ctx.handler
  const n1 = _createComponentWithFallback(_component_Bar, { onBar: () => _on_bar1 })
  return [n0, n1]
}"
`;

exports[`compiler: element transform > component > do not resolve component from non-script-setup bindings 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const _component_Example = _resolveComponent("Example")
  const n0 = _createComponentWithFallback(_component_Example, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > generate multi root component 1`] = `
"import { createComponent as _createComponent, template as _template } from 'vue';
const t0 = _template("123")

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const n0 = _createComponent(_ctx.Comp)
  const n1 = t0()
  return [n0, n1]
}"
`;

exports[`compiler: element transform > component > generate single root component 1`] = `
"import { createComponent as _createComponent } from 'vue';

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const n0 = _createComponent(_ctx.Comp, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > import + resolve component 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > resolve component from setup bindings (inline const) 1`] = `
"
  const n0 = _createComponent(Example, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > resolve component from setup bindings (inline) 1`] = `
"
  const n0 = _createComponent(_unref(Example), null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > resolve component from setup bindings 1`] = `
"import { createComponent as _createComponent } from 'vue';

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const n0 = _createComponent(_ctx.Example, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > resolve implicitly self-referencing component 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Example__self = _resolveComponent("Example", true)
  const n0 = _createComponentWithFallback(_component_Example__self, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > resolve namespaced component from props bindings (inline) 1`] = `
"
  const n0 = _createComponent(Foo.Example, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > resolve namespaced component from props bindings (non-inline) 1`] = `
"import { createComponent as _createComponent } from 'vue';

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const n0 = _createComponent(_ctx.Foo.Example, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > resolve namespaced component from setup bindings (inline const) 1`] = `
"
  const n0 = _createComponent(Foo.Example, null, null, true)
  return n0
"
`;

exports[`compiler: element transform > component > resolve namespaced component from setup bindings 1`] = `
"import { createComponent as _createComponent } from 'vue';

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const n0 = _createComponent(_ctx.Foo.Example, null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > static props 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, {
    id: () => ("foo"), 
    class: () => ("bar")
  }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-bind="obj" 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { $: [
    () => (_ctx.obj)
  ] }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-bind="obj" after static prop 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, {
    id: () => ("foo"), 
    $: [
      () => (_ctx.obj)
    ]
  }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-bind="obj" before static prop 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { $: [
    () => (_ctx.obj), 
    { id: () => ("foo") }
  ] }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-bind="obj" between static props 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, {
    id: () => ("foo"), 
    $: [
      () => (_ctx.obj), 
      { class: () => ("bar") }
    ]
  }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-for on component should not mark as single root 1`] = `
"import { createComponent as _createComponent, createFor as _createFor } from 'vue';

export function render(_ctx, $props, $emit, $attrs, $slots) {
  const n0 = _createFor(() => (_ctx.items), (_for_item0) => {
    const n2 = _createComponent(_ctx.Comp)
    return n2
  }, (item) => (item), 2)
  return n0
}"
`;

exports[`compiler: element transform > component > v-on expression is a function call 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const _on_bar = $event => (_ctx.handleBar($event))
  const n0 = _createComponentWithFallback(_component_Foo, { onBar: () => _on_bar }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-on expression is inline statement 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const _on_bar = () => _ctx.handler
  const n0 = _createComponentWithFallback(_component_Foo, { onBar: () => _on_bar }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component > v-on="obj" 1`] = `
"import { resolveComponent as _resolveComponent, toHandlers as _toHandlers, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { $: [
    () => (_toHandlers(_ctx.obj))
  ] }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component dynamic event with once modifier 1`] = `
"import { resolveComponent as _resolveComponent, toHandlerKey as _toHandlerKey, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { $: [
    () => ({ [_toHandlerKey(_ctx.foo) + "Once"]: () => _ctx.bar })
  ] }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component event with once modifier 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { onFooOnce: () => _ctx.bar }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component with dynamic event arguments 1`] = `
"import { resolveComponent as _resolveComponent, toHandlerKey as _toHandlerKey, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { $: [
    () => ({ [_toHandlerKey(_ctx.foo-_ctx.bar)]: () => _ctx.bar }), 
    () => ({ [_toHandlerKey(_ctx.baz)]: () => _ctx.qux })
  ] }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > component with dynamic prop arguments 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const n0 = _createComponentWithFallback(_component_Foo, { $: [
    () => ({ [_ctx.foo-_ctx.bar]: _ctx.bar }), 
    () => ({ [_ctx.baz]: _ctx.qux })
  ] }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > dynamic component > capitalized version w/ static binding 1`] = `
"import { resolveDynamicComponent as _resolveDynamicComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const n0 = _createComponentWithFallback(_resolveDynamicComponent("foo"), null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > dynamic component > dynamic binding 1`] = `
"import { createDynamicComponent as _createDynamicComponent } from 'vue';

export function render(_ctx) {
  const n0 = _createDynamicComponent(() => (_ctx.foo), null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > dynamic component > dynamic binding shorthand 1`] = `
"import { createDynamicComponent as _createDynamicComponent } from 'vue';

export function render(_ctx) {
  const n0 = _createDynamicComponent(() => (_ctx.is), null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > dynamic component > normal component with is prop 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_custom_input = _resolveComponent("custom-input")
  const n0 = _createComponentWithFallback(_component_custom_input, { is: () => ("foo") }, null, true)
  return n0
}"
`;

exports[`compiler: element transform > dynamic component > static binding 1`] = `
"import { resolveDynamicComponent as _resolveDynamicComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const n0 = _createComponentWithFallback(_resolveDynamicComponent("foo"), null, null, true)
  return n0
}"
`;

exports[`compiler: element transform > empty template 1`] = `
"
export function render(_ctx) {
  return null
}"
`;

exports[`compiler: element transform > invalid html nesting 1`] = `
"import { insert as _insert, template as _template } from 'vue';
const t0 = _template("<div>123</div>")
const t1 = _template("<p></p>")
const t2 = _template("<form></form>")

export function render(_ctx) {
  const n1 = t1()
  const n3 = t2()
  const n0 = t0()
  const n2 = t2()
  _insert(n0, n1)
  _insert(n2, n3)
  return [n1, n3]
}"
`;

exports[`compiler: element transform > props + children 1`] = `
"import { template as _template } from 'vue';
const t0 = _template("<div id=\\"foo\\"><span></span></div>", true)

export function render(_ctx) {
  const n0 = t0()
  return n0
}"
`;

exports[`compiler: element transform > props merging: class 1`] = `
"import { setClass as _setClass, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _renderEffect(() => _setClass(n0, ["foo", { bar: _ctx.isBar }]))
  return n0
}"
`;

exports[`compiler: element transform > props merging: event handlers 1`] = `
"import { withKeys as _withKeys, delegate as _delegate, delegateEvents as _delegateEvents, template as _template } from 'vue';
const t0 = _template("<div></div>", true)
_delegateEvents("click")

export function render(_ctx) {
  const n0 = t0()
  _delegate(n0, "click", _withKeys(e => _ctx.a(e), ["foo"]))
  _delegate(n0, "click", _withKeys(e => _ctx.b(e), ["bar"]))
  return n0
}"
`;

exports[`compiler: element transform > props merging: style 1`] = `
"import { setStyle as _setStyle, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _setStyle(n0, ["color: green", { color: 'red' }])
  return n0
}"
`;

exports[`compiler: element transform > static props 1`] = `
"import { template as _template } from 'vue';
const t0 = _template("<div id=\\"foo\\" class=\\"bar\\"></div>", true)

export function render(_ctx) {
  const n0 = t0()
  return n0
}"
`;

exports[`compiler: element transform > v-bind="obj" 1`] = `
"import { setDynamicProps as _setDynamicProps, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [_ctx.obj], true))
  return n0
}"
`;

exports[`compiler: element transform > v-bind="obj" after static prop 1`] = `
"import { setDynamicProps as _setDynamicProps, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [{ id: "foo" }, _ctx.obj], true))
  return n0
}"
`;

exports[`compiler: element transform > v-bind="obj" before static prop 1`] = `
"import { setDynamicProps as _setDynamicProps, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [_ctx.obj, { id: "foo" }], true))
  return n0
}"
`;

exports[`compiler: element transform > v-bind="obj" between static props 1`] = `
"import { setDynamicProps as _setDynamicProps, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _renderEffect(() => _setDynamicProps(n0, [{ id: "foo" }, _ctx.obj, { class: "bar" }], true))
  return n0
}"
`;

exports[`compiler: element transform > v-on="obj" 1`] = `
"import { setDynamicEvents as _setDynamicEvents, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = t0()
  _renderEffect(() => _setDynamicEvents(n0, _ctx.obj))
  return n0
}"
`;
