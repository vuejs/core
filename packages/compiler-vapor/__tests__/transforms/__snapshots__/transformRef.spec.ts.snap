// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: template ref transform > dynamic ref 1`] = `
"import { renderEffect as _renderEffect, setRef as _setRef, template as _template } from 'vue';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n0 = t0()
  let r0
  _renderEffect(() => r0 = _setRef(n0, _ctx.foo, r0))
  return n0
}"
`

exports[`compiler: template ref transform > ref + v-for 1`] = `
"import { setRef as _setRef, createFor as _createFor, template as _template } from 'vue';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n0 = _createFor(() => ([1,2,3]), (_block) => {
    const n2 = t0()
    _setRef(n2, "foo", void 0, true)
    return [n2, () => {}]
  })
  return n0
}"
`

exports[`compiler: template ref transform > ref + v-if 1`] = `
"import { setRef as _setRef, createIf as _createIf, template as _template } from 'vue';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n0 = _createIf(() => (true), () => {
    const n2 = t0()
    _setRef(n2, "foo")
    return n2
  })
  return n0
}"
`

exports[`compiler: template ref transform > static ref 1`] = `
"import { setRef as _setRef, template as _template } from 'vue';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n0 = t0()
  _setRef(n0, "foo")
  return n0
}"
`
