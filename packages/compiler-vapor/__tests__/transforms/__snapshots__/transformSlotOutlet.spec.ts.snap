// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: transform <slot> outlets > default slot outlet 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("default", null)
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > default slot outlet with fallback 1`] = `
"import { createSlot as _createSlot, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = _createSlot("default", null, () => {
    const n2 = t0()
    return n2
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > default slot outlet with props & fallback 1`] = `
"import { createSlot as _createSlot, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = _createSlot("default", { foo: () => (_ctx.bar) }, () => {
    const n2 = t0()
    return n2
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > default slot outlet with props 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("default", {
    foo: () => ("bar"), 
    baz: () => (_ctx.qux), 
    fooBar: () => (_ctx.foo-_ctx.bar)
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > dynamically named slot outlet 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot(() => (_ctx.foo + _ctx.bar), null)
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > dynamically named slot outlet with v-bind shorthand 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot(() => (_ctx.name), null)
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > error on unexpected custom directive on <slot> 1`] = `
"import { resolveDirective as _resolveDirective, createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const _directive_foo = _resolveDirective("foo")
  const n0 = _createSlot("default", null)
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > error on unexpected custom directive with v-show on <slot> 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("default", null)
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > named slot outlet with fallback 1`] = `
"import { createSlot as _createSlot, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = _createSlot("foo", null, () => {
    const n2 = t0()
    return n2
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > named slot outlet with props & fallback 1`] = `
"import { createSlot as _createSlot, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const n0 = _createSlot("foo", { foo: () => (_ctx.bar) }, () => {
    const n2 = t0()
    return n2
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > statically named slot outlet 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("foo", null)
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > statically named slot outlet with props 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("foo", {
    foo: () => ("bar"), 
    baz: () => (_ctx.qux)
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > statically named slot outlet with v-bind="obj" 1`] = `
"import { createSlot as _createSlot } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("foo", {
    foo: () => ("bar"), 
    $: [
      () => (_ctx.obj), 
      { baz: () => (_ctx.qux) }
    ]
  })
  return n0
}"
`;

exports[`compiler: transform <slot> outlets > statically named slot outlet with v-on 1`] = `
"import { createSlot as _createSlot, toHandlers as _toHandlers } from 'vue';

export function render(_ctx) {
  const n0 = _createSlot("default", {
    onClick: () => _ctx.foo, 
    $: [
      () => (_toHandlers(_ctx.bar)), 
      { baz: () => (_ctx.qux) }
    ]
  })
  return n0
}"
`;
