// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: transform slot > dynamic slots name 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template("foo")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n2 = _createComponentWithFallback(_component_Comp, null, {
    $: [
      () => ({
        name: _ctx.name, 
        fn: () => {
          const n0 = t0()
          return n0
        }
      })
    ]
  }, true)
  return n2
}"
`;

exports[`compiler: transform slot > dynamic slots name w/ v-for 1`] = `
"import { resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, createForSlots as _createForSlots, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template(" ")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n2 = _createComponentWithFallback(_component_Comp, null, {
    $: [
      () => (_createForSlots(_ctx.list, (item) => ({
        name: item, 
        fn: (_slotProps0) => {
          const n0 = t0()
          _renderEffect(() => _setText(n0, _toDisplayString(_slotProps0["bar"])))
          return n0
        }
      })))
    ]
  }, true)
  return n2
}"
`;

exports[`compiler: transform slot > dynamic slots name w/ v-for and provide absent key 1`] = `
"import { resolveComponent as _resolveComponent, createForSlots as _createForSlots, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template("foo")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n2 = _createComponentWithFallback(_component_Comp, null, {
    $: [
      () => (_createForSlots(_ctx.list, (_, __, index) => ({
        name: index, 
        fn: () => {
          const n0 = t0()
          return n0
        }
      })))
    ]
  }, true)
  return n2
}"
`;

exports[`compiler: transform slot > dynamic slots name w/ v-if / v-else[-if] 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template("condition slot")
const t1 = _template("another condition")
const t2 = _template("else condition")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n6 = _createComponentWithFallback(_component_Comp, null, {
    $: [
      () => (_ctx.condition
        ? {
          name: "condition", 
          fn: () => {
            const n0 = t0()
            return n0
          }
        }
        : _ctx.anotherCondition
          ? {
            name: "condition", 
            fn: (_slotProps0) => {
              const n2 = t1()
              return n2
            }
          }
          : {
            name: "condition", 
            fn: () => {
              const n4 = t2()
              return n4
            }
          })
    ]
  }, true)
  return n6
}"
`;

exports[`compiler: transform slot > implicit default slot 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n1 = _createComponentWithFallback(_component_Comp, null, {
    "default": () => {
      const n0 = t0()
      return n0
    }
  }, true)
  return n1
}"
`;

exports[`compiler: transform slot > named slots w/ implicit default slot 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template("foo")
const t1 = _template("bar")
const t2 = _template("<span></span>")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n4 = _createComponentWithFallback(_component_Comp, null, {
    "one": () => {
      const n0 = t0()
      return n0
    }, 
    "default": () => {
      const n2 = t1()
      const n3 = t2()
      return [n2, n3]
    }
  }, true)
  return n4
}"
`;

exports[`compiler: transform slot > nested component slot 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_B = _resolveComponent("B")
  const _component_A = _resolveComponent("A")
  const n1 = _createComponentWithFallback(_component_A, null, {
    "default": () => {
      const n0 = _createComponentWithFallback(_component_B)
      return n0
    }
  }, true)
  return n1
}"
`;

exports[`compiler: transform slot > nested slots scoping 1`] = `
"import { resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template(" ")

export function render(_ctx) {
  const _component_Inner = _resolveComponent("Inner")
  const _component_Comp = _resolveComponent("Comp")
  const n5 = _createComponentWithFallback(_component_Comp, null, {
    "default": (_slotProps0) => {
      const n1 = _createComponentWithFallback(_component_Inner, null, {
        "default": (_slotProps1) => {
          const n0 = t0()
          _renderEffect(() => _setText(n0, _toDisplayString(_slotProps0["foo"] + _slotProps1["bar"] + _ctx.baz)))
          return n0
        }
      })
      const n3 = t0()
      _renderEffect(() => _setText(n3, " " + _toDisplayString(_slotProps0["foo"] + _ctx.bar + _ctx.baz)))
      return [n1, n3]
    }
  }, true)
  return n5
}"
`;

exports[`compiler: transform slot > on component dynamically named slot 1`] = `
"import { resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template(" ")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n1 = _createComponentWithFallback(_component_Comp, null, {
    $: [
      () => ({
        name: _ctx.named, 
        fn: (_slotProps0) => {
          const n0 = t0()
          _renderEffect(() => _setText(n0, _toDisplayString(_slotProps0["foo"] + _ctx.bar)))
          return n0
        }
      })
    ]
  }, true)
  return n1
}"
`;

exports[`compiler: transform slot > on component named slot 1`] = `
"import { resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template(" ")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n1 = _createComponentWithFallback(_component_Comp, null, {
    "named": (_slotProps0) => {
      const n0 = t0()
      _renderEffect(() => _setText(n0, _toDisplayString(_slotProps0["foo"] + _ctx.bar)))
      return n0
    }
  }, true)
  return n1
}"
`;

exports[`compiler: transform slot > on-component default slot 1`] = `
"import { resolveComponent as _resolveComponent, toDisplayString as _toDisplayString, setText as _setText, renderEffect as _renderEffect, createComponentWithFallback as _createComponentWithFallback, template as _template } from 'vue';
const t0 = _template(" ")

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n1 = _createComponentWithFallback(_component_Comp, null, {
    "default": (_slotProps0) => {
      const n0 = t0()
      _renderEffect(() => _setText(n0, _toDisplayString(_slotProps0["foo"] + _ctx.bar)))
      return n0
    }
  }, true)
  return n1
}"
`;

exports[`compiler: transform slot > quote slot name 1`] = `
"import { resolveComponent as _resolveComponent, createComponentWithFallback as _createComponentWithFallback } from 'vue';

export function render(_ctx) {
  const _component_Comp = _resolveComponent("Comp")
  const n1 = _createComponentWithFallback(_component_Comp, null, {
    "nav-bar-title-before": () => {
      return null
    }
  }, true)
  return n1
}"
`;

exports[`compiler: transform slot > slot + v-if / v-else[-if] should not cause error 1`] = `
"import { resolveComponent as _resolveComponent, setInsertionState as _setInsertionState, createSlot as _createSlot, createComponentWithFallback as _createComponentWithFallback, createIf as _createIf, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const _component_Foo = _resolveComponent("Foo")
  const _component_Bar = _resolveComponent("Bar")
  const n6 = t0()
  _setInsertionState(n6)
  const n0 = _createSlot("foo", null)
  _setInsertionState(n6)
  const n1 = _createIf(() => (true), () => {
    const n3 = _createComponentWithFallback(_component_Foo)
    return n3
  }, () => {
    const n5 = _createComponentWithFallback(_component_Bar)
    return n5
  })
  return n6
}"
`;
