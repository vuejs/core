// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: template ref transform > dynamic ref 1`] = `
"import { createTemplateRefSetter as _createTemplateRefSetter, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  let r0
  _renderEffect(() => r0 = _setTemplateRef(n0, _ctx.foo, r0))
  return n0
}"
`;

exports[`compiler: template ref transform > function ref 1`] = `
"import { createTemplateRefSetter as _createTemplateRefSetter, renderEffect as _renderEffect, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  let r0
  _renderEffect(() => {
    const _foo = _ctx.foo
    r0 = _setTemplateRef(n0, bar => {
        _foo.value = bar
        ;({ baz: _ctx.baz } = bar)
        console.log(_foo.value, _ctx.baz)
      }, r0)
  })
  return n0
}"
`;

exports[`compiler: template ref transform > ref + v-for 1`] = `
"import { createTemplateRefSetter as _createTemplateRefSetter, createFor as _createFor, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = _createFor(() => ([1,2,3]), (_for_item0) => {
    const n2 = t0()
    _setTemplateRef(n2, "foo", void 0, true)
    return n2
  }, null, 4)
  return n0
}"
`;

exports[`compiler: template ref transform > ref + v-if 1`] = `
"import { createTemplateRefSetter as _createTemplateRefSetter, createIf as _createIf, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = _createIf(() => (true), () => {
    const n2 = t0()
    _setTemplateRef(n2, "foo")
    return n2
  })
  return n0
}"
`;

exports[`compiler: template ref transform > static ref (inline mode) 1`] = `
"
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  _setTemplateRef(n0, foo)
  return n0
"
`;

exports[`compiler: template ref transform > static ref 1`] = `
"import { createTemplateRefSetter as _createTemplateRefSetter, template as _template } from 'vue';
const t0 = _template("<div></div>", true)

export function render(_ctx) {
  const _setTemplateRef = _createTemplateRefSetter()
  const n0 = t0()
  _setTemplateRef(n0, "foo")
  return n0
}"
`;
